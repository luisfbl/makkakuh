services:
  nginx-dev:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/conf.d/default.conf
    restart: always
    depends_on:
      - rest-server-dev
      - web-dev

  rest-server-dev:
    build:
      context: .
      dockerfile: ./rest-server/Dockerfile.dev
    ports:
      - "8080:8080"
      - "5005:5005"
    env_file:
      - ./.env
    volumes:
      - ./rest-server:/app/rest-server
      - gradle-cache:/home/gradle/.gradle
      - cdn-data-dev:/app/rest-server/uploads
    depends_on:
      postgres:
        condition: service_healthy

  web-dev:
    build:
      context: .
      dockerfile: ./web/Dockerfile.dev
    ports:
      - "4200:4200"
    volumes:
      - ./web:/app
      - node_modules:/app/node_modules
    env_file:
      - ./.env
    environment:
      - WATCHPACK_POLLING=true

  postgres:
    image: postgres:latest
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-makkakuh}
    expose:
      - "5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  gradle-cache:
  node_modules:
  cdn-data-dev: